@inject IDropdownHelperService DropdownHelperService
@{
    Layout = null;
    var appClaimsJson = JsonConvert.SerializeObject(DropdownHelperService.GetAppClaims().Select(x => new { id = x.Value, text = x.Text }).ToList());
    var ticketTypesJson = JsonConvert.SerializeObject(DropdownHelperService.GetTicketTypes().Select(x => new { id = x.Value, text = x.Text }).ToList());
    var ticketStatusesJson = JsonConvert.SerializeObject(DropdownHelperService.GetTicketStatuses().Select(x => new { id = x.Value, text = x.Text }).ToList());
}

<script>

    function Select2AppClaims(options) {
        Select2({
            data: @Html.Raw(appClaimsJson),
            placeholder: '@Translations.Select_app_claim',
            ...options
        });
    }

    function Select2TicketTypes(options) {
        Select2({
            data: @Html.Raw(ticketTypesJson),
            placeholder: '@Translations.Select_ticket_type',
            ...options
        });
    }

    function Select2TicketStatuses(options) {
        Select2({
            data: @Html.Raw(ticketStatusesJson),
            placeholder: '@Translations.Select_ticket_status',
            ...options
        });
    }

    function Select2AjaxCompanies(options) {
        Select2Ajax({
            element: options.element,
            url: '@Url.Action("Dropdown", "Companies")',
            map: (x) => {
                return {
                    id: x.id,
                    text: x.name
                };
            },
            placeholder: '@Translations.Select_company',
            ...options
        });
    }
    
    function Select2AjaxBusinessUnits(options) {
        Select2Ajax({
            element: options.element,
            url: '@Url.Action("Dropdown", "BusinessUnits")',
            map: (x) => {
                return {
                    id: x.id,
                    text: x.name
                };
            },
            placeholder: '@Translations.Select_business_unit',
            ...options
        });
    }

    function Select2AjaxCountries(options) {
        Select2Ajax({
            element: options.element,
            url: '@Url.Action("Dropdown", "Countries")',
            map: (x) => {
                return {
                    id: x.id,
                    text: x.name
                };
            },
            placeholder: '@Translations.Select_country',
            ...options
        });
    }

    function Select2AjaxCurrencies(options) {
        Select2Ajax({
            element: options.element,
            url: '@Url.Action("Dropdown", "Currencies")',
            map: (x) => {
                return {
                    id: x.id,
                    text: x.name
                };
            },
            placeholder: '@Translations.Select_currency',
            ...options
        });
    }

    function Select2AjaxLanguages(options) {
        Select2Ajax({
            element: options.element,
            url: '@Url.Action("Dropdown", "Languages")',
            map: (x) => {
                return {
                    id: x.id,
                    text: x.name
                };
            },
            placeholder: '@Translations.Select_language',
            ...options
        });
    }

    function Select2(options) {
        $(options.element).select2({
            data: options.data,
            placeholder: options.placeholder,
        });

        if (options.initialValue != undefined) {
            $(options.element).val(options.initialValue).trigger('change');
        }

        $(options.element).change(function (e) {
            if (options.onChange != undefined) {
                options.onChange($(this));
            }

            if (options.onChangeCopyTextTo != undefined) {
                $(options.onChangeCopyTextTo).val($(this).select2('data')[0]['text']);
            }
        });
    }

    function Select2Ajax(options) {
        $(options.element).select2({
            ajax: {
                url: options.url,
                data: options.data || function (params) {
                    return {
                        name: params.term,
                        pagination: {
                            skip: (params.page * 10) || 0
                        }
                    };
                },
                processResults: function (data) {
                    return {
                        results: data.results.map(options.map),
                        pagination: {
                            more: data.pagination.more
                        }
                    };
                },
                type: 'POST',
            },
            placeholder: options.placeholder,
        });

        $(options.element).change(function (e) {
            if (options.onChange != undefined) {
                options.onChange($(this));
            }

            if (options.onChangeCopyTextTo != undefined) {
                $(options.onChangeCopyTextTo).val($(this).select2('data')[0]['text']);
            }
        });
    }

</script>