@inject IDropdownHelperService DropdownHelperService
@{
    Layout = null;
}

<script>

    function Translatable(options) {
        translationsManager.shouldSubmit = false;

        var source = $(options.element);
        var sourceTagName = $(source).prop("tagName");
        var keyId = options.element;
        var key = $(source).val();
        var formGroup = $(source).closest('.translatable_form_group')[0];
        var sourceLabelText = $(formGroup).find('label')[0]?.textContent?.toLowerCase() ?? '';
        var translationBtn = $(formGroup).find('.translation_btn')[0];

        //Generate translations wrapper for current input
        var translationsWrapperId = `${options.element.replace('#', '')}_translation_wrapper`;
        var translationsWrapper = $(`<div id="${translationsWrapperId}" class="translation_wrapper"></div>`);

        $(formGroup).append(translationsWrapper);

        //Append translation inputs for currents input translations wrapper
        @(Html.Raw(DropdownHelperService
        .GetSystemLanguages()
        .GetDropdownItemsJson())).forEach(function (item, index) {

            var languageCulture = item.id;
            var languageName = item.text;
            var translationItemId = `${keyId}_translation_item_${languageCulture}`.replace('#', '');

            //Try and load translation from translationsManager
            var translationForCurrentItem =
                translationsManager.findByCultureAndKeyId(languageCulture, keyId)?.value ??
                translationsManager.findByCultureAndKey(languageCulture, key)?.value ??
                '';

            //Append translation input in the translations wrapper
            if (sourceTagName == 'INPUT') {
                $(translationsWrapper).append(`
                    <div class="form-group">
                        <label>${languageName}</label>
                        <input data-culture="${languageCulture}"
                               data-keyid="${keyId}"
                               id="${translationItemId}"
                               value="${translationForCurrentItem}"
                               class="translation_item form-control m-input"
                               placeholder="@Translations.Enter_translation_for ${sourceLabelText}" />
                    </div>
                `);
            } else if (sourceTagName == 'TEXTAREA') {
                var rows = $(source).attr('rows') ?? 2;

                $(translationsWrapper).append(`
                    <div class="form-group">
                        <label>${languageName}</label>
                        <textarea data-culture="${languageCulture}"
                                  data-keyid="${keyId}"
                                  id="${translationItemId}"
                                  rows="${rows}"
                                  value="${translationForCurrentItem}"
                                  class="translation_item form-control m-input"
                                  placeholder="@Translations.Enter_translation_for ${sourceLabelText}">${translationForCurrentItem}</textarea>
                    </div>
                `);
            }

            //Try and load translation from the database
            if (translationForCurrentItem == '') {
                $.ajax({
                    url: '/Translations/Translate',
                    type: 'GET',
                    data: {
                        culture: languageCulture,
                        key: key
                    },
                    success: (translation) => {
                        $(`#${translationItemId}`).val(translation ?? '');
                    }
                });
            }
        });

        //Toggle visiblity of the translations wrapper for the current input
        $(translationBtn).on('click', function (e) {
            $(translationsWrapper).slideToggle("fast", function () { });
            if (window.localStorage.getItem(translationsWrapperId) != null) {
                window.localStorage.removeItem(translationsWrapperId);
            } else {
                window.localStorage.setItem(translationsWrapperId, '');
            }
        });

        $(options.element).on('change', function (e) {
            $('.translation_item').trigger('change');
        });

        if (window.localStorage.getItem(translationsWrapperId) != null) {
            $(translationsWrapper).toggle();
        }
    }

    $(document).on('change', '.translation_item', function (e) {
        var keyId = $(this).data('keyid');
        var key = $(keyId).val();
        var culture = $(this).data('culture');
        var value = $(this).val();

        translationsManager.addOrUpdate(new Translation(keyId, key, culture, value));
    });

</script>