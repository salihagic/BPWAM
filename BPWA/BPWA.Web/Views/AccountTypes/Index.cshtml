@model AccountTypeSearchModel

<div class="kt-portlet kt-portlet--mobile col-lg-12">
    <form method="POST" class="datatable_search_form">

        <div class="kt-portlet__head kt-portlet__head--lg">
            <div class="kt-portlet__head-label">
                <span class="kt-portlet__head-icon">
                    <i class="kt-font-brand kt-menu__link-icon flaticon2-menu-4"></i>
                </span>
                <h3 class="kt-portlet__head-title">
                    @Translations.Account_types
                </h3>
            </div>
        </div>
    </form>

    <div class="kt-portlet__body">

        <table class="datatable"></table>

    </div>
</div>

<script>

    $(document).ready(function() {

        Select2SystemAccountTypes({
            element: '#@nameof(AccountTypeSearchModel.SystemAccountType)',
        });

        DatatableAjax({
            element: '.datatable',
            url: '@Url.Action("IndexJson", "AccountTypes")',
            searchFormElement: '.datatable_search_form',
            columns: [
                {
                    field: '@nameof(AccountTypeDTO.SystemAccountType).ToCamelCase()',
                    title: '@Translations.System_account_type',
                    textAlign: 'center',
                    width: 150,
                    template: function (row) {
                        var text = row.@nameof(AccountTypeDTO.SystemAccountTypeString).ToCamelCase();
                        var value = row.@nameof(AccountTypeDTO.SystemAccountType).ToCamelCase();
                        var status = {
                            0: { 'class': 'kt-badge--warning' },
                            1: { 'class': 'kt-badge--info' },
                            2: { 'class': 'kt-badge--success' },
                        };
                        if (typeof status[value] === 'undefined') {
                            return text;
                        }
                        return '<span class="kt-badge ' + status[value].class + ' kt-badge--inline kt-badge--pill">' + text + '</span>';
                    },
                },
                {
                    field: '@nameof(AccountTypeDTO.DurationString).ToCamelCase()',
                    title: '@Translations.Duration',
                    sortable: false,
                    template: function (row) {
                        console.log(row.duration);
                        return row.durationString != null ? `${row.durationString}` : '@Translations.Indefinite';
                    }
                },
                {
                    template: (row) => `\
                        ${DatatableDetailsButton({ url: `@Url.Action("Details", "AccountTypes")/${row.id}` })}
                        ${DatatableEditButton({ url: `@Url.Action("Edit", "AccountTypes")/${row.id}` })}
                    `,
                    ...DatatableActionsColumnOptions({
                        width: 100
                    }),
                }
            ]
        });
    });

</script>


